{"version":3,"file":"static/js/57.0aed11b4.chunk.js","mappings":"+NACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAmF,qB,SCGtEA,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACnBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAyBJ,KACzB,mBAAQK,KAAK,SAASF,UAAWC,EAAYE,QAL5B,kBAAML,GAASM,EAAAA,EAAAA,IAAWR,GAA1B,EAKjB,sBAKL,E,UCfD,EAAuB,uBCIVS,EAAW,WACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OACE,eAAIR,UAAWC,EAAf,SACGK,EAAMG,KAAI,gBAAGb,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,yBACE,SAACF,EAAD,CAAMC,GAAIA,EAAIC,KAAMA,KADbD,EADA,KAOhB,EChBD,EAAuB,yBAAvB,EAAwD,0BAAxD,EAA2F,2BCG9Ec,EAAa,WACxB,IAAMZ,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,UAAWC,EAAUU,SAbR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTlB,EAAOiB,EAAKE,SAASnB,KAAKoB,MAChC,GAAa,KAATpB,EAGF,OAFAC,GAASoB,EAAAA,EAAAA,IAAQrB,SACjBiB,EAAKK,QAGPC,MAAM,yCACP,EAGC,WACE,kBAAOC,KAAK,OAAOrB,UAAWC,KAC9B,mBAAQC,KAAK,SAASF,UAAWC,EAAjC,wBAKL,ECnBc,SAASqB,IACtB,IAAMxB,GAAWC,EAAAA,EAAAA,MACXwB,GAAYhB,EAAAA,EAAAA,IAAYiB,EAAAA,IAM9B,OAJAC,EAAAA,EAAAA,YAAU,WACR3B,GAAS4B,EAAAA,EAAAA,MACV,GAAE,CAAC5B,KAGF,iCACE,SAAC6B,EAAA,EAAD,WACE,6CAEF,SAACjB,EAAD,KACA,yBAAMa,GAAa,4BACnB,SAAClB,EAAD,MAGL,C,gFC1BM,IAAMmB,EAAgB,SAAAI,GAAK,OAAIA,EAAMtB,MAAMuB,OAAhB,EAIrBrB,EAAiB,SAAAoB,GAAK,OAAIA,EAAMtB,MAAMwB,KAAhB,C","sources":["webpack://react-homework-template/./src/components/Task/Task.module.css?22e8","components/Task/Task.jsx","webpack://react-homework-template/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.jsx","webpack://react-homework-template/./src/components/TaskEditor/TaskEditor.module.css?47aa","components/TaskEditor/TaskEditor.jsx","pages/Tasks.jsx","redux/tasks/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"button\":\"Task_button__dYLbw\"};","import { useDispatch } from 'react-redux';\nimport { deleteTask } from 'redux/tasks/operations';\nimport css from './Task.module.css';\n\nexport const Task = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteTask(id));\n\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>{text}</p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TaskList_list__Q1M-x\"};","import { useSelector } from 'react-redux';\nimport { Task } from '../Task/Task';\nimport { selectAllTasks } from 'redux/tasks/selectors';\nimport css from './TaskList.module.css';\n\nexport const TaskList = () => {\n  const tasks = useSelector(selectAllTasks);\n\n  return (\n    <ul className={css.list}>\n      {tasks.map(({ id, text }) => (\n        <li key={id}>\n          <Task id={id} text={text} />\n        </li>\n      ))}\n    </ul>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskEditor_form__NXWha\",\"input\":\"TaskEditor_input__WXNoz\",\"button\":\"TaskEditor_button__qGfcX\"};","import { useDispatch } from 'react-redux';\nimport { addTask } from 'redux/tasks/operations';\nimport css from './TaskEditor.module.css';\n\nexport const TaskEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const text = form.elements.text.value;\n    if (text !== '') {\n      dispatch(addTask(text));\n      form.reset();\n      return;\n    }\n    alert('Task cannot be empty. Enter some text!');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input name=\"text\" className={css.input} />\n      <button type=\"submit\" className={css.button}>\n        Add task\n      </button>\n    </form>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectLoading } from 'redux/tasks/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n    </>\n  );\n}","export const selectLoading = state => state.tasks.loading;\n\nexport const selectFilter = state => state.tasks.filter;\n\nexport const selectAllTasks = state => state.tasks.items;"],"names":["Task","id","text","dispatch","useDispatch","className","css","type","onClick","deleteTask","TaskList","tasks","useSelector","selectAllTasks","map","TaskEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","addTask","reset","alert","name","Tasks","isLoading","selectLoading","useEffect","fetchTasks","Helmet","state","loading","items"],"sourceRoot":""}